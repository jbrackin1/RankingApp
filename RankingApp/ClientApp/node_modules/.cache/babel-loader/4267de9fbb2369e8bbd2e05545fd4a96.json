{"ast":null,"code":"var _jsxFileName = \"/Users/jerodbrackin/Projects/RankingApp/RankingApp/ClientApp/src/components/RankingGrid.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RankingGrid = _ref => {\n  let {\n    items,\n    imgArr,\n    drag,\n    allowDrop,\n    drop\n  } = _ref;\n  const rankingGrid = [];\n  const cellCollectionTop = [];\n  const cellCollectionMiddle = [];\n  const cellCollectionBottom = [];\n  const cellCollectionWorst = [];\n\n  function pushCellMarkupToArr(cellCollection, rankNum, rowLabel) {\n    if (rankNum > 0) {\n      var _imgArr$find;\n\n      var item = items.find(o => o.ranking === rankNum);\n      cellCollection.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `rank-${rankNum}`,\n        onDrop: drop,\n        onDragOver: allowDrop,\n        className: \"rank-cell\",\n        children: item != null ? /*#__PURE__*/_jsxDEV(\"img\", {\n          id: `item-${item.id}`,\n          src: (_imgArr$find = imgArr.find(o => o.id === item.imageId)) === null || _imgArr$find === void 0 ? void 0 : _imgArr$find.image,\n          draggable: \"true\",\n          onDragStart: drag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 35\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 33\n      }, this));\n    } else {\n      cellCollection.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-label\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: rowLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 33\n      }, this));\n    }\n  }\n\n  function createCellsForRow(rowNum) {\n    var rankNum = 0;\n    var currCollection = [];\n    var label = \"\";\n    const numCells = 5;\n\n    for (var a = 1; a <= numCells; a++) {\n      rankNum = a === 1 ? 0 : numCells * (rowNum - 1) + a - rowNum;\n\n      if (rowNum === 1) {\n        currCollection = cellCollectionTop;\n        label = \"Top Tier\";\n      } else if (rowNum === 2) {\n        currCollection = cellCollectionMiddle;\n        label = \"Middle Tier\";\n      } else if (rowNum === 3) {\n        currCollection = cellCollectionBottom;\n        label = \"Bottom Tier\";\n      } else if (rowNum === 4) {\n        currCollection = cellCollectionWorst;\n        label = \"Worst Tier\";\n      }\n\n      pushCellMarkupToArr(currCollection, rankNum, label);\n    }\n  }\n\n  function createCellsForRows() {\n    const maxRows = 4;\n\n    for (var row = 1; row <= maxRows; row++) {\n      createCellsForRow(row);\n    }\n  }\n\n  function createRowsForGrid() {\n    rankingGrid.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rank-row top-tier\",\n      children: cellCollectionTop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 26\n    }, this));\n    rankingGrid.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rank-row middle-tier\",\n      children: cellCollectionMiddle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 26\n    }, this));\n    rankingGrid.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rank-row bottom-tier\",\n      children: cellCollectionBottom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 26\n    }, this));\n    rankingGrid.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rank-row worst-tier\",\n      children: cellCollectionWorst\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 26\n    }, this));\n    return rankingGrid;\n  }\n\n  function createRankingGrid() {\n    createCellsForRows();\n    return createRowsForGrid();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rankings\",\n    children: createRankingGrid()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_c = RankingGrid;\nexport default RankingGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"RankingGrid\");","map":{"version":3,"names":["RankingGrid","items","imgArr","drag","allowDrop","drop","rankingGrid","cellCollectionTop","cellCollectionMiddle","cellCollectionBottom","cellCollectionWorst","pushCellMarkupToArr","cellCollection","rankNum","rowLabel","item","find","o","ranking","push","id","imageId","image","createCellsForRow","rowNum","currCollection","label","numCells","a","createCellsForRows","maxRows","row","createRowsForGrid","createRankingGrid"],"sources":["/Users/jerodbrackin/Projects/RankingApp/RankingApp/ClientApp/src/components/RankingGrid.js"],"sourcesContent":["\nconst RankingGrid = ({items, imgArr, drag, allowDrop, drop }) => {\n\n    const rankingGrid = [];\n    const cellCollectionTop = [];\n    const cellCollectionMiddle = [];\n    const cellCollectionBottom = [];\n    const cellCollectionWorst = [];\n\n    function pushCellMarkupToArr(cellCollection, rankNum, rowLabel) {\n        if (rankNum > 0) {\n            var item = items.find(o => o.ranking === rankNum);\n            cellCollection.push(<div id={`rank-${rankNum}`} onDrop={drop} onDragOver={allowDrop} className=\"rank-cell\">\n                {(item != null) ? <img id={`item-${item.id}`} src={imgArr.find(o => o.id === item.imageId)?.image} draggable=\"true\" onDragStart={drag} /> \n                                : null}\n            </div>);\n        }\n        else {\n            cellCollection.push(<div className=\"row-label\">\n                <h4>{rowLabel}</h4>\n            </div>);\n        }\n    }\n\n    function createCellsForRow(rowNum) {\n        var rankNum = 0;\n        var currCollection = [];\n        var label = \"\";\n        const numCells = 5;\n\n        for (var a = 1; a <= numCells; a++) {\n            rankNum = (a === 1) ? 0 : (numCells * (rowNum - 1)) + a - rowNum;\n\n            if (rowNum === 1) {\n                currCollection = cellCollectionTop;\n                label = \"Top Tier\";\n            }\n            else if (rowNum === 2) {\n                currCollection = cellCollectionMiddle;\n                label = \"Middle Tier\";\n            }\n            else if (rowNum === 3) {\n                currCollection = cellCollectionBottom;\n                label = \"Bottom Tier\";\n            }\n            else if (rowNum === 4) {\n                currCollection = cellCollectionWorst;\n                label = \"Worst Tier\";\n            }\n            pushCellMarkupToArr(currCollection, rankNum, label);\n\n        }\n\n    }\n\n    function createCellsForRows() {\n        const maxRows = 4;\n        for (var row = 1; row <= maxRows; row++) {\n            createCellsForRow(row);\n        }\n    }\n\n    function createRowsForGrid() {\n\n        rankingGrid.push(<div className=\"rank-row top-tier\">{cellCollectionTop}</div>);\n        rankingGrid.push(<div className=\"rank-row middle-tier\">{cellCollectionMiddle}</div>);\n        rankingGrid.push(<div className=\"rank-row bottom-tier\">{cellCollectionBottom}</div>);\n        rankingGrid.push(<div className=\"rank-row worst-tier\">{cellCollectionWorst}</div>);\n\n        return rankingGrid;\n    }\n\n    function createRankingGrid() {\n        createCellsForRows();\n        return createRowsForGrid();\n    }\n\n    return (\n        <div className=\"rankings\">\n            {createRankingGrid()}\n        </div>\n            \n    )\n\n}\nexport default RankingGrid;"],"mappings":"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"},"metadata":{},"sourceType":"module"}